## DESCRIPTION
##   Given input sequences and a circuit diagram, determine the output of the logic gates.
## ENDDESCRIPTION

## DBsubject(Set theory and logic)
## DBchapter(Propositional logic)
## DBsection(Operations on propositions)
## Institution(Champlain College Saint-Lambert)
## Author(Malcolm Harper)
## Date(2020/12/10)
## Level(2)
## TitleText1('Computing Mathematics')
## AuthorText1('Lipschutz')
## Section1('7.6')
## Problem1('')
## KEYWORDS('Logic', 'Boolean', 'Operation','input sequence')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGcourse.pl",
#"PGauxiliaryFunctions.pl",
);

####################
# My macros

# Display an integer as a string in binary notation
# only the least significant nbits are shown

sub binary_display {
    sprintf $nbitsf, $_[0] & $bitmask;
    };


TEXT(beginproblem());
$showPartialCorrectAnswers = 0; 

####################
# Configuration

$image_ext = '.png';

####################
# Setup

@Circuits = (
    {% for configuration in configurations %}
        {
            'filestem' => '{{ configuration['filename'] }}',
            'circuit_function' =>  sub { {{ configuration["perl_function"] }} },
        },
        {% endfor %}
);

####################
# Choose the circuit

$circuit = random(0,scalar(@Circuits)-1,1);

$image_file = $Circuits[$circuit]{'filestem'}.$image_ext;
$circuit_function = $Circuits[$circuit]{'circuit_function'};

####################
# Choose the inputs

$nbits = 5;                                 # minimum of 4 bits in this set up
$nbitsf = "%0".$nbits."b";
$bitmask = 2**$nbits - 1;

# Do it like this to cover all possible combinations of inputs
# then add an extra pair of inputs
@Abits = (1,1,0,0,random(0,1,1));
@Bbits = (1,0,1,0,random(0,1,1));

# Mix up the order of the inputs
@slice = NchooseK($nbits,$nbits);
$A = oct("0b".(join('',@Abits[@slice])));   # Turn the bits into an integer
$B = oct("0b".(join('',@Bbits[@slice])));

####################
# set up the image display

$width = 300;
$height = 300;
$tex_size = 700;
$image = image($image_file,
    width=>$width,tex_size=>$tex_size,
    extra_html_tags=>'alt="Diagram of a logic circuit."' );

####################
# Main Text and Solution

Context()->texStrings;
BEGIN_TEXT

Given the input sequences:
\[
\begin{array}{rl}
    A & =  \{ sprintf $nbitsf,$A \} \\
    B & =  \{ sprintf $nbitsf,$B \} 
\end{array}
\]
$PAR
Find the output sequence for the logic circuit diagram: $PAR
${BCENTER} $image ${ECENTER}
$PAR
The output sequence, \( C \) = \{ ans_rule(10) \}
$PAR
Note: the output sequence will be the same length (\{ $nbits \} bits) as the input sequences.
END_TEXT

ANS(str_cmp(binary_display($Circuits[$circuit]{'circuit_function'}->())));

#BEGIN_HINT
#Let \( Y \) be the output of the logic gates.
#$PAR
#OR gate: \( A + B = Y \)
#$BR
#0 occurs as an output of an OR gate only when both inputs are 0.
#$PAR
#AND gate: \( A \cdot B = Y \)
#$BR
#1 occurs as an output of an AND gate only when both inputs are 1.
#$PAR
#NOT gate: \( \overline{A} = Y \)
#$BR
#If the input is 1, the output is 0; if the input is 0, the output is 1.
#END_HINT


ENDDOCUMENT();        # This should be the last executable line in the problem.;
